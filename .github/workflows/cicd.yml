---
name: Build, Test

on:
  push:
    branches: '**'
  pull_request:
    branches: [main, master, develop]
    types: [opened, reopened, synchronize]
  release:
    branches: [main, master]
    types: [published]

jobs:
  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        django-version:
          - '2.2'
          - '3.2'
          - '4.0'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "Django~=${{ matrix.django-version }}"
          pip install nose2

      - name: Setup Django
        run: |
          django-admin startproject project .
          python manage.py migrate

      - name: Run tests
        id: tests
        shell: bash
        run: |
          python3 -m compileall project/ scripts/
          nose2

  build:
    needs: test

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up tags
        id: tags
        shell: bash
        run: |
          GITHUB_REF=${{ github.ref }}

          case $GITHUB_REF in
            refs/tags/*)
              FIXED_BRANCH=${GITHUB_REF#refs/tags/}
              ;;
            refs/heads/*)
              FIXED_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)
              ;;
            refs/pull/*)
              FIXED_BRANCH=$(echo ${GITHUB_REF#refs/pull/} | tr / -)
              ;;
            *)
              FIXED_BRANCH=$(echo ${GITHUB_REF} | tr / -)
              ;;
          esac

          echo "::set-output name=dc_tag::django-container:${FIXED_BRANCH}"
          echo "::set-output name=dtc_tag::django-test-container:${FIXED_BRANCH}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: >-
               ${{ runner.os }}-buildx-$(echo ${{ hashFiles('Dockerfile') }}
               | head -c 16)
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Django Container Image
        uses: docker/build-push-action@v2
        with:
          target: django-container
          tags: ${{ steps.tags.outputs.dc_tag }}
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build Django Container Test Image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.tags.outputs.dtc_tag }}
          push: false
          load: true

      - name: Push Django Container to GCR
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: uw-it-aca/actions/gcr-push@main
        with:
          image_tag: ${{ steps.tags.outputs.dc_tag }}
          gcp_json_key: ${{ secrets.GCP_JSON_KEY }}

      - name: Push Django Test Container to GCR
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: uw-it-aca/actions/gcr-push@main
        with:
          image_tag: ${{ steps.tags.outputs.dtc_tag }}
          gcp_json_key: ${{ secrets.GCP_JSON_KEY }}
